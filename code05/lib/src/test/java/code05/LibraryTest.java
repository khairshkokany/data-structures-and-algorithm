/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package code05;

import org.junit.jupiter.api.Test;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        LinkedList classUnderTest = new LinkedList();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }
    @Test
    public Void included() throws IOException {
        LinkedList classUnderTest = new LinkedList();
        classUnderTest.add("khair");


        assertTrue(classUnderTest.included("khair"),"this is true ");
        return null;
    }
    @Test void printList(){

        LinkedList classUnderTest = new LinkedList();

        classUnderTest.add("K");
        classUnderTest.add("H");
        classUnderTest.add("A");
        classUnderTest.add("I");
        classUnderTest.add("R");
        assertEquals("Head -> {H}  ->{K}   -> {A}   -> {I}   -> {R}   -> null -> ",classUnderTest.toString(),"app should return ==> Head -> {K}  ->{H}   -> {A}   -> {I}   -> {R}   -> null -> ");

    }

    @Test
    public void returnAfter() {
        LinkedList classUnderTest = new LinkedList();
        classUnderTest.add("K");
        classUnderTest.add("H");
        classUnderTest.add("A");
        classUnderTest.add("I");
        classUnderTest.add("R");
        classUnderTest.insertAfter("C","R");
        assertEquals("Head  ->{K} -> {H}   -> {A}   -> {I} -> {C}  -> {R}   -> null -> ", classUnderTest.toString(),"");
    }

    @Test
    public void returnBefore() {
        LinkedList classUnderTest = new LinkedList();
        classUnderTest.add("K");
        classUnderTest.add("H");
        classUnderTest.add("A");
        classUnderTest.add("I");
        classUnderTest.add("R");
        classUnderTest.insertAfter("C","R");
        assertEquals("Head  ->{K} -> {H}   -> {A}   -> {I}   -> {R} -> {C}   -> null -> ", classUnderTest.toString(),"");
    }
    @Test

    public void returnNodeFromTheLast() {
        LinkedList list = new LinkedList();
        list.add("K");
        list.add("H");
        list.add("A");
        list.add("I");
        list.add("R");


        assertEquals("I", list.insertNthFromEnd(1).getData());
    }

    @Test public void zipTest() {
        LinkedList linkedList = new LinkedList();
        LinkedList linkedList1 = new LinkedList();
        LinkedList linkedList2 = new LinkedList();

        linkedList.add("K");
        linkedList.add("H");
        linkedList.add("A");
        linkedList.add("I");
        linkedList.add("R");

        linkedList1.add("K");
        linkedList1.add("H");
        linkedList1.add("A");
        linkedList1.add("I");
        linkedList1.add("R");
        String test = linkedList2.zipLists(linkedList,linkedList1).toString();;
        assertEquals(test,linkedList2.zipLists(linkedList,linkedList1).toString());

    }

}



